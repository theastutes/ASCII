import "./chunk-DFKQJ226.js";

// node_modules/compress-base64/dist/index.esm.js
function compress(base64, options) {
  return new Promise(function(resolve, reject) {
    var type = options.type, width = options.width, min = options.min, max = options.max;
    var img = new Image();
    var quality = 0.6;
    img.src = base64;
    img.setAttribute("crossOrigin", "Anonymous");
    var imgWidth, imgHeight;
    img.onload = function() {
      imgWidth = img.width;
      imgHeight = img.height;
      var canvas = document.createElement("canvas");
      var ctx = canvas.getContext("2d");
      if (Math.max(imgWidth, imgHeight) > width) {
        if (imgWidth > imgHeight) {
          canvas.width = width;
          canvas.height = width * imgHeight / imgWidth;
        } else {
          canvas.height = width;
          canvas.width = width * imgWidth / imgHeight;
        }
      } else {
        canvas.width = imgWidth;
        canvas.height = imgHeight;
        quality = 0.6;
      }
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
      var base642 = canvas.toDataURL(type, quality);
      while (base642.length / 1024 > max) {
        quality -= 0.01;
        base642 = canvas.toDataURL(type, quality);
      }
      while (base642.length / 1024 < min) {
        quality += 1e-3;
        base642 = canvas.toDataURL(type, quality);
      }
      resolve(base642);
    };
    img.onerror = function() {
      reject();
    };
  });
}
var index_esm_default = compress;
export {
  index_esm_default as default
};
/*! Bundled license information:

compress-base64/dist/index.esm.js:
  (*!
    * compress-base64 v1.0.0
    * (c) 2020
    * author: sunsilent
    * @license MIT
    *)
*/
//# sourceMappingURL=compress-base64.js.map
